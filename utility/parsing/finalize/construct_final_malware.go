package finalize

import "github.com/TeamPhoneix/go-evil/utility/structure"

// This functions binds everything togheter and will generate a complete go code in the structure
func Construct_malware(s_json string) string {
	data_object := structure.Receive(s_json)

	// Add all imports
	data_object.Add_malware_line("import (")
	for _, new_import := range data_object.GO_imports {
		data_object.Add_malware_line(new_import)
	}
	data_object.Add_malware_line(")")

	// Add all structs
	if len(data_object.GO_struct) > 0 {
		for _, new_struct := range data_object.GO_struct {
			data_object.Add_malware_line(new_struct)
		}
	}

	// Add all const
	if len(data_object.GO_const) > 0 {
		data_object.Add_malware_line("const (")
		for _, new_const := range data_object.GO_const {
			data_object.Add_malware_line(new_const)
		}
		data_object.Add_malware_line(")")
	}

	// Add all globals
	if len(data_object.GO_global) > 0 {
		for _, new_global := range data_object.GO_global {
			data_object.Add_malware_line(new_global)
		}
	}

	// And finally add all our functions
	for _, new_func := range data_object.GO_functions {
		data_object.Add_malware_line(new_func)
	}

	return structure.Send(data_object)
}
